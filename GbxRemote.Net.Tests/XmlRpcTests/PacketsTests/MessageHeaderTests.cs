using GbxRemoteNet.XmlRpc;
using GbxRemoteNet.XmlRpc.Packets;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Xunit;

namespace GbxRemote.Net.Tests.XmlRpcTests.PacketsTests {
    public class MessageHeaderTests {
        static readonly byte[] MethodCallBytes = new byte[] {
            0x63, 0x04, 0x0, 0x0, 0x05, 0x0, 0x0, 0x00, 0x3c, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x43, 0x61, 0x6c, 0x6c, 0x3e,
            0x0a, 0x20, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x3e, 0x4d, 0x61, 0x6e, 0x69, 0x61,
            0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x45, 0x6e, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x3c, 0x2f, 0x6d, 0x65, 0x74,
            0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x3e, 0x0a, 0x20, 0x20, 0x3c, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x3e, 0x0a,
            0x20, 0x20, 0x20, 0x20, 0x3c, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x76,
            0x61, 0x6c, 0x75, 0x65, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x61, 0x72, 0x72, 0x61, 0x79,
            0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x64, 0x61, 0x74, 0x61, 0x3e, 0x0a, 0x20,
            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3e, 0x0a, 0x20,
            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
            0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x6d,
            0x65, 0x6d, 0x62, 0x65, 0x72, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
            0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x6e, 0x61, 0x6d, 0x65, 0x3e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x3c, 0x2f, 0x6e, 0x61,
            0x6d, 0x65, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
            0x20, 0x20, 0x3c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x3e, 0x70, 0x47,
            0x65, 0x70, 0x6c, 0x75, 0x75, 0x6c, 0x52, 0x4c, 0x2d, 0x65, 0x4b, 0x34, 0x56, 0x44, 0x74, 0x51, 0x38, 0x35, 0x72, 0x67,
            0x3c, 0x2f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3e, 0x0a, 0x20, 0x20, 0x20,
            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65,
            0x72, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c,
            0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x6e, 0x61, 0x6d, 0x65, 0x3e, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
            0x3c, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x73, 0x74, 0x72, 0x69, 0x6e,
            0x67, 0x3e, 0x45, 0x76, 0x6f, 0x2e, 0x73, 0x6e, 0x69, 0x78, 0x74, 0x68, 0x6f, 0x3c, 0x2f, 0x73, 0x74, 0x72, 0x69, 0x6e,
            0x67, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
            0x20, 0x3c, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20,
            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x3e,
            0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c,
            0x6e, 0x61, 0x6d, 0x65, 0x3e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x3c, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x3e,
            0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c,
            0x76, 0x61, 0x6c, 0x75, 0x65, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x69, 0x34, 0x3e, 0x32, 0x33, 0x35, 0x3c, 0x2f, 0x69, 0x34, 0x3e, 0x0a,
            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f,
            0x76, 0x61, 0x6c, 0x75, 0x65, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
            0x20, 0x20, 0x20, 0x3c, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x3e, 0x0a, 0x20, 0x20,
            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x6e, 0x61, 0x6d,
            0x65, 0x3e, 0x52, 0x61, 0x6e, 0x6b, 0x3c, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3e, 0x0a,
            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
            0x3c, 0x69, 0x34, 0x3e, 0x31, 0x3c, 0x2f, 0x69, 0x34, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3e, 0x0a, 0x20, 0x20,
            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x6d, 0x65, 0x6d, 0x62,
            0x65, 0x72, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f,
            0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
            0x3c, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c,
            0x2f, 0x64, 0x61, 0x74, 0x61, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x61, 0x72, 0x72,
            0x61, 0x79, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3e, 0x0a, 0x20,
            0x20, 0x20, 0x20, 0x3c, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x70, 0x61, 0x72,
            0x61, 0x6d, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3e, 0x0a, 0x20, 0x20,
            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x69, 0x34, 0x3e, 0x2d, 0x31, 0x3c, 0x2f, 0x69, 0x34, 0x3e, 0x0a, 0x20, 0x20,
            0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x2f, 0x70,
            0x61, 0x72, 0x61, 0x6d, 0x3e, 0x0a, 0x20, 0x20, 0x3c, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x3e, 0x0a, 0x3c, 0x2f,
            0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x43, 0x61, 0x6c, 0x6c, 0x3e
        };

        static readonly byte[] MethodResponseBytes = new byte[] {
            0x8c, 0x0, 0x0, 0x0, 0x04, 0x0, 0x0, 0x80, 0x3c,0x6d,0x65,0x74,0x68,0x6f,0x64,0x52,0x65,0x73,0x70,0x6f,
            0x6e,0x73,0x65,0x3e,0x0a,0x20,0x20,0x3c,0x70,0x61,0x72,0x61,0x6d,0x73,0x3e,0x0a,0x20,0x20,0x20,0x20,
            0x3c,0x70,0x61,0x72,0x61,0x6d,0x3e,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x3c,0x76,0x61,0x6c,0x75,0x65,
            0x3e,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x3c,0x62,0x6f,0x6f,0x6c,0x65,0x61,0x6e,0x3e,0x31,
            0x3c,0x2f,0x62,0x6f,0x6f,0x6c,0x65,0x61,0x6e,0x3e,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x3c,0x2f,0x76,
            0x61,0x6c,0x75,0x65,0x3e,0x0a,0x20,0x20,0x20,0x20,0x3c,0x2f,0x70,0x61,0x72,0x61,0x6d,0x3e,0x0a,0x20,
            0x20,0x3c,0x2f,0x70,0x61,0x72,0x61,0x6d,0x73,0x3e,0x0a,0x3c,0x2f,0x6d,0x65,0x74,0x68,0x6f,0x64,0x52,
            0x65,0x73,0x70,0x6f,0x6e,0x73,0x65,0x3e
        };

        [Fact]
        public void FromIOAsync_Correctly_Parses_MethodCall_Message() {
            MemoryStream stream = new(MethodCallBytes);
            XmlRpcIO io = new(stream);

            MessageHeader header = MessageHeader.FromIOAsync(io).GetAwaiter().GetResult();

            Assert.Equal(1123, header.MessageLength);
            Assert.Equal((uint)5, header.Handle);
        }

        [Fact]
        public void FromIOAsync_Correctly_Parses_MethodResponse_Message() {
            MemoryStream stream = new MemoryStream(MethodResponseBytes);
            XmlRpcIO io = new(stream);

            MessageHeader header = MessageHeader.FromIOAsync(io).GetAwaiter().GetResult();

            Assert.Equal(140, header.MessageLength);
            Assert.Equal(0x80000004, header.Handle);
        }

        [Fact]
        public void IsCallback_Returns_True_On_MethodCall() {
            MemoryStream stream = new(MethodCallBytes);
            XmlRpcIO io = new(stream);

            MessageHeader header = MessageHeader.FromIOAsync(io).GetAwaiter().GetResult();

            Assert.True(header.IsCallback);
        }

        [Fact]
        public void IsCallback_Returns_False_On_MethodResponse() {
            MemoryStream stream = new(MethodResponseBytes);
            XmlRpcIO io = new(stream);

            MessageHeader header = MessageHeader.FromIOAsync(io).GetAwaiter().GetResult();

            Assert.False(header.IsCallback);
        }
    }
}
